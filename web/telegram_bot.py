import json
import os

import telebot
from django.conf import settings
from django.db.models import Q
from django.http import JsonResponse, HttpResponseForbidden
from django.views.decorators.csrf import csrf_exempt
from dotenv import load_dotenv

from tattoo_academy.settings import TELEGRAM_BOT_TOKEN
from web.models import UserModel

load_dotenv()

bot = telebot.TeleBot(token=settings.TELEGRAM_BOT_TOKEN)


def set_telegram_webhook():
    import requests
    response = requests.post(
        f"https://api.telegram.org/bot{os.getenv('TELEGRAM_BOT_KEY')}/setWebhook",
        json={"url": f"https://{os.getenv('HOST')}/telegram_webhook/{os.getenv('TELEGRAM_BOT_KEY')}/"}
        )
    print(response.json())


@csrf_exempt
def webhook_telegram(request, token: str = None):
    if request.method == "POST":
        if token != TELEGRAM_BOT_TOKEN:
            return HttpResponseForbidden("Invalid Token")
        update_data = json.loads(request.body.decode("utf-8"))

        if update_data:
            try:
                message = update_data["message"]
                text = message.get("text")
                chat_id = int(message.get("chat").get("id"))
                print(chat_id)

                if text.startswith("/", 0):
                    if text.strip().startswith("/start"):
                        bot.send_message(
                            chat_id=chat_id,
                            text="üìß –í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, email, –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–π –¥–æ –≤–∞—à–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É."
                        )
                        return JsonResponse({"status": "ok"})
                    else:
                        bot.send_message(
                            chat_id=chat_id,
                            text="üòÖ –•–º–º... –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ú–æ–∂–ª–∏–≤–æ, –ø–∞–ª—å—Ü—ñ –ø–æ—Å–ª–∏–∑–Ω—É–ª–∏—Å—å? ü§î\n–í–≤–µ–¥—ñ—Ç—å /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º."
                        )
                        return JsonResponse({"status": "ok"})
                if "@" in text and ".com" in text:
                    user = UserModel.objects.filter(Q(telegram_chat_id=chat_id) | Q(email=text.strip().lower())).first()
                    if user:
                        user.telegram_chat_id = chat_id
                        user.save()
                        if not user.is_superuser:
                            bot.send_message(
                                chat_id=chat_id,
                                text=(
                                    "‚úÖ –í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–≤'—è–∑–∞–Ω–æ!\n\n"
                                    "–¢–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ —Ü–µ–π —á–∞—Ç, –∫–æ–ª–∏ –º–µ–Ω—Ç–æ—Ä –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å –≤–∞–º –≤ —á–∞—Ç—ñ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç—å –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è.\n\n"
                                    "üßø –ë–∞–∂–∞—î–º–æ —É—Å–ø—ñ—Ö—ñ–≤ —É –Ω–∞–≤—á–∞–Ω–Ω—ñ —Ç–∞ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è –Ω–∞ —à–ª—è—Ö—É –¥–æ –º–∞–π—Å—Ç–µ—Ä–Ω–æ—Å—Ç—ñ –≤ —Ç–∞—Ç—É!"
                                )
                            )
                            return JsonResponse({"status": "ok"})
                        else:
                            bot.send_message(
                                chat_id=chat_id,
                                text=(
                                    "‚úÖ –í–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–≤'—è–∑–∞–Ω–æ!\n\n"
                                    "–¢–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ —Ü–µ–π —á–∞—Ç, –∫–æ–ª–∏ —É—á–Ω—ñ –±—É–¥—É—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –≤–∞–º –≤ —á–∞—Ç—ñ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –¥–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è.\n\n"
                                )
                            )
                            return JsonResponse({"status": "ok"})

                    elif not user:
                        bot.send_message(
                            chat_id=chat_id,
                            text=(
                                "üòî –ù–∞ –∂–∞–ª—å, –º–∏ –Ω–µ –∑–Ω–∞–π—à–ª–∏ –≤–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å.\n\n"
                                "–Ø–∫—â–æ –≤–∏ —â–µ –Ω–µ –∑ –Ω–∞–º–∏ ‚Äî –ø—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –∫—É—Ä—Å—É –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º:\n"
                                f"https://{os.getenv('HOST')}\n\n"
                                "‚ú® –°—Ç–∞—Ä—Ç—É–π—Ç–µ —Å–≤—ñ–π —à–ª—è—Ö —É —Å–≤—ñ—Ç—ñ —Ç–∞—Ç—É –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ!"
                            )
                        )
                        return JsonResponse({"status": "ok"})

                if text:
                    if UserModel.objects.filter(telegram_chat_id=chat_id).exists():
                        bot.send_message(
                            chat_id=chat_id,
                            text=(
                                "üòÖ –û–π, –∑–¥–∞—î—Ç—å—Å—è, —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ?\n"
                                "–ù–µ —Ö–≤–∏–ª—é–π—Ç–µ—Å—è ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—á—ñ–∫—É–π—Ç–µ –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥ –º–µ–Ω–µ. "
                                "–Ø –ø–æ–≤—ñ–¥–æ–º–ª—é –≤–∞—Å, —â–æ–π–Ω–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –∑‚Äô—è–≤–∏—Ç—å—Å—è –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –º–µ–Ω—Ç–æ—Ä–∞. üì©"
                            )
                        )
                        return JsonResponse({"status": "ok"})
                    else:
                        bot.send_message(
                        chat_id=chat_id,
                        text="üòÖ –•–º–º... –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ú–æ–∂–ª–∏–≤–æ, –ø–∞–ª—å—Ü—ñ –ø–æ—Å–ª–∏–∑–Ω—É–ª–∏—Å—å? ü§î\n–í–≤–µ–¥—ñ—Ç—å /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º."
                        )
                        return JsonResponse({"status": "ok"})
                return JsonResponse({"status": "ok"})
            except Exception as e:
                print(e)
        return JsonResponse({"status": "400"})


def send_message_in_telegram(text: str, chat_id: str = 0):
    user = UserModel.objects.filter(telegram_chat_id=chat_id).first()
    if user:
        bot.send_message(chat_id=int(chat_id), text=text)
    return JsonResponse({"status": "ok"})
